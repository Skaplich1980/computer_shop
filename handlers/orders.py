from aiogram import Router, types, F
from database import get_db_connection

router = Router()

@router.message(F.text == "/orders")
async def show_orders(message: types.Message):
    user_id = message.from_user.id
    conn = await get_db_connection()

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    orders = await conn.fetch("""
        SELECT order_id, total_price, created_at
        FROM orders
        WHERE user_id = $1
        ORDER BY created_at DESC
    """, user_id)

    if not orders:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
        await conn.close()
        return

    text_lines = ["üìú –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤:\n"]

    for order in orders:
        text_lines.append(
            f"üÜî –ó–∞–∫–∞–∑ ‚Ññ{order['order_id']} –æ—Ç {order['created_at'].strftime('%d.%m.%Y %H:%M')}\n"
            f"üí∞ –°—É–º–º–∞: {order['total_price']} —Ä—É–±."
        )

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞
        items = await conn.fetch("""
            SELECT oi.product_code, p.name, oi.quantity, oi.price_per_unit
            FROM order_items oi
            JOIN products p ON p.code = oi.product_code
            WHERE oi.order_id = $1
        """, order["order_id"])

        for code, name, qty, price in items:
            item_sum = qty * price
            text_lines.append(f"   ‚Ä¢ {name} ‚Äî {qty} —à—Ç. √ó {price} —Ä—É–±. = {item_sum} —Ä—É–±.")

        text_lines.append("")  # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É –∑–∞–∫–∞–∑–∞–º–∏

    await conn.close()

    await message.answer("\n".join(text_lines))
